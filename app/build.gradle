plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "app.klimatic"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "app.klimatic.MockRunner"

        buildConfigField 'String', 'BASE_URL', '"https://api.weatherapi.com/"'
        buildConfigField 'String', 'API_KEY', apikeyProperties['API_KEY']
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            versionNameSuffix ' - debug'
        }
        release {
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        playstore {
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'

    def constraintLayoutLibraryVersion = "2.0.4"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutLibraryVersion"

    /* Android */
    def appCompatLibraryVersion = "1.3.0"
    implementation "androidx.appcompat:appcompat:$appCompatLibraryVersion"

    def swipeRefreshLibraryVersion = "1.1.0"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefreshLibraryVersion"
    def recyclerViewLibraryVersion = "1.2.1"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewLibraryVersion"

    def materialLibraryVersion = "1.3.0"
    implementation "com.google.android.material:material:$materialLibraryVersion"

    /* Lifecycle */
    def lifeCycleVersion = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifeCycleVersion"
    def viewModelVersion = "2.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewModelVersion"
    def liveDataKtxVersion = "2.4.0-alpha01"
    implementation  "androidx.lifecycle:lifecycle-livedata-ktx:$liveDataKtxVersion"

    /* Lottie */
    def lottieVersion = "3.4.0"
    implementation "com.airbnb.android:lottie:$lottieVersion"

    /* Multidex */
    implementation 'com.android.support:multidex:1.0.3'

    /* Image Loading */
    def glideVersion = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    /* Koin */
    implementation "org.koin:koin-android:2.0.1"
    implementation 'org.koin:koin-androidx-viewmodel:2.0.1'
    implementation 'org.koin:koin-androidx-scope:2.0.1'

    /* Networking */
    def retrofitVersion = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    def rxJavaAdapterVersion = "2.6.1"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxJavaAdapterVersion"
    def loggingInterceptorVersion = "4.9.1"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion"

    /* Room */
    def roomVersion = "2.3.0"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    /* Firebase Bom */
    implementation platform('com.google.firebase:firebase-bom:28.1.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    /* Unit Testing */
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.mockito:mockito-core:3.3.3"
    testImplementation 'org.mockito:mockito-inline:2.27.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3'
    testImplementation 'io.mockk:mockk:1.10.2'
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.9.0"

    /* Ui Testing */
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.9.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation 'org.mockito:mockito-android:2.25.1'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
}
