plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "app.klimatic"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 3
        versionName "1.3"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "app.klimatic.MockRunner"

        buildConfigField 'String', 'BASE_URL', '"https://api.weatherapi.com/"'
        buildConfigField 'String', 'API_KEY', apikeyProperties['API_KEY']
    }

    buildTypes {
        debug {
            versionNameSuffix ' - debug'
        }
        release {
            zipAlignEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

}

dependencies {
    implementation project(':domain')

    implementation appDependencies.kotlin

    /* Android */
    implementation appDependencies.coreKtx
    implementation appDependencies.constraintLayout
    implementation appDependencies.appCompat

    implementation appDependencies.swipeRefreshLayout
    implementation appDependencies.recyclerView

    implementation appDependencies.gmsPlayServices

    implementation appDependencies.material

    implementation appDependencies.lifeCycle
    implementation appDependencies.viewModel
    implementation appDependencies.liveData

    /* Navigation */
    implementation appDependencies.navigationFragment
    implementation appDependencies.navigationUi

    /* Lottie */
    implementation appDependencies.lottie

    /* Multidex */
    implementation appDependencies.multidex

    /* Image Loading */
    implementation appDependencies.glide
    kapt appDependencies.glideCompiler

    /* Koin */
    implementation appDependencies.koin
    implementation appDependencies.koinViewModel
    implementation appDependencies.koinScope

    /* Networking */
    implementation appDependencies.retrofit
    implementation appDependencies.retrofitGsonConverter
    implementation appDependencies.loggingInterceptor

    /* Room */
    implementation appDependencies.room
    kapt appDependencies.roomCompiler

    /* Firebase */
    implementation platform(appDependencies.firebase)
    implementation appDependencies.firebaseCrashlytics
    implementation appDependencies.firebaseAnalytics

    /* Unit Testing */
    testImplementation appTestDependencies.junit
    testImplementation appTestDependencies.mockitoCore
    testImplementation appTestDependencies.mockitoInline
    testImplementation appTestDependencies.coroutinesTest
    testImplementation appTestDependencies.coreTesting
    testImplementation appTestDependencies.mockWebServer

    /* Ui Testing */
    androidTestImplementation appTestDependencies.mockWebServer
    androidTestImplementation 'org.mockito:mockito-android:2.25.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
}
